

class lowPriceSecBackDate(object):
    BASE_DIR = 'T://CMI//MUNI//FidessaComplianceReportingBKCM'
    FILE_DIR = ''
    RUN_DATE = ''
    save = 'H:\\Post June 11, 2010\\Equity Low Priced Report'

    def __init__(self, date1, threshold, advthreshold):
        self.date1 = date1
        self.date2 = date1
        self.date3 = date1
        self.threshold = threshold
        self.advthreshold = advthreshold

    def __str__(self):
        return self.BASE_DIR

    def formatDates(self):
        date = self.date1

        date = datetime.datetime.strptime(date, '%m-%d-%Y')

        self.date1 = date.strftime('%m-%d-%y')

        self.date2 = date.strftime('%Y%m%d')

        self.RUN_DATE = date.strftime('%Y-%m-%d')

        self.FILE_DIR = os.path.join(self.BASE_DIR, self.date1, 'EXECUTED_ORDER.' + self.date2 + ".psv")

        print("Fidess report located at " + self.FILE_DIR,
              "\n" + "Report will be ran for:  " + self.RUN_DATE,
              "\n" + "report will be saved in : " + self.save)

        return self.date1, self.date2, self.FILE_DIR, self.RUN_DATE

class washMgr(object):
    
    def __init__(self, fileLocation, saveLocation,date):
                
        self.fileLocation = fileLocation
        self.saveLocation = saveLocation
        self.date = date
        
    def openFile(self):

        df = pd.read_csv(self.fileLocation, sep="\t", skiprows=2)
        cols = df.columns.tolist()
        cols = [i.replace(" ", "_").upper() for i in cols]
        df.columns = cols
        df = df.sort_values(by=['CUSIP_NUMBER', 'MASTER_ACCOUNT'])
        df = df[~df['SECURITY_TYPE'].isin(["Financial commodity option.", "Financial commodity future."])]
        df = df[(df['ISSUER'] != "US TREASURY N/B") & (df['ISSUER'] !='TREASURY BILL')]
        df = df[~df['COUNTERPARTY'].isin(books)]
        df = df[~df['MASTER_ACCOUNT'].isin(books)]
        df = df[(df['ALTERNATIVE_TRADING_SYSTEM_MP'].isnull())&(df['COUNTERPARTY']!= "DEALERWEB")]
        return df
        
    def grps(self):
        
        df = self.openFile()
        grp = df.groupby(['TRADE_DATE' ,'AMOUNT_(WHOLE_NUMBER)', 'CUSIP_NUMBER', 'COUNTERPARTY'])
        grpList = grp['BUY/SELL'].filter(lambda x: x.nunique() >=2).index.tolist()

        print(grpList)
        
        df = df[df.index.isin(grpList)]
        df = df.set_index(['AS_OF_DATE','COUNTERPARTY', 'CUSIP_NUMBER'])
        df['Notes'] = np.where(df['BENCHMARK']=='CT10', 'TBA - Ignore', 'Non-TBA')
        df = df[~df['Notes'].str.contains('TBA - Ignore')]
        
        return df
    def save(self):
        
        
        df = self.grps()
        return df.to_excel(self.saveLocation+'//'+self.date+'.xlsx')


def main():
    pass

if __name__ == "__main__":
   # stuff only to run when not called via 'import' here
   main()
